- name: backend
  hosts: backend
  become: yes
  tasks: 
    - name: install pymysql
      ansible.builtin.pip:
       name:
       - PyMySQL
       executable: pip3.9
      
    - name: Disable Node.js module
      ansible.builtin.dnf:
        name: nodejs
        state: absent
        

    - name: Enable Node.js version 20 module
      ansible.builtin.command: dnf module enable nodejs:20 -y

        

    - name: Install Node.js
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: Check if user 'expense' exists
      ansible.builtin.command: id expense
      ignore_errors: true
      register: error

    - name: Add user 'expense' if not exists
      ansible.builtin.command: useradd expense
      when: error.rc != 0

    - name: Create /app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download backend zip file
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: Unzip backend package into /app
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes
        creates: /app/package.json

    - name: Install npm
      ansible.builtin.package:
        name: npm
        state: present

    - name: Copy backend.service to systemd
      ansible.builtin.copy:
        src: /home/ec2-user/expense-ansible/backend.service
        dest: /etc/systemd/system/backend.service

    - name: Install MySQL server
      ansible.builtin.dnf:
        name: mysql
        state: present

    - name: Load MySQL schema
      ansible.builtin.shell: mysql -h mysql.the4teen.info -uroot -pExpenseApp@1 < /app/schema/backend.sql

    - name: Reload systemd daemon and start backend service
      ansible.builtin.systemd:
        name: backend
        state: started
        enabled: yes
