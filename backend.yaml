- name: backend
  hosts: backend
  become: yes
  tasks: 
  - name: disable
    ansible.builtin.command: dnf module disable nodejs -y
  - name: disable
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: installing nodejs
    ansible.builtin.package:
     name: nodejs
     state: present

  - name: checking user
    ansible.builtin.command: id expense
    ignore_errors: true
    register: error

  - name: watching user
    ansible.builtin.debug:
     msg: "show: {{error}}"

  - name: adding user
    ansible.builtin.command: useradd expense
    when: error.rc != 0

  - name: creating diretory app
    ansible.builtin.command: mkdir -p /app

  - name: entering app
    ansible.builtin.command: cd /app


  - name: downloading
    ansible.builtin.command: curl -o /tmp/backend.zip https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip

  - name: Unzip backend package into /app
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
      creates: /app/package.json
      
  - name: npm install
    ansible.builtin.package:
     name: npm
     state: present

  - name: Copy backend.service to systemd
    ansible.builtin.copy:
      src: /home/ec2-user/expense-ansible/backend.service
      dest: /etc/systemd/system/backend.service

  - name: Install MySQL server
    ansible.builtin.dnf:
      name: mysql
      state: present

  - name: Load MySQL schema
    ansible.builtin.shell: |
      mysql -h database.the4teen.info -uroot -pExpenseApp@1 < /app/schema/backend.sql

    
  - name: start reload and daemon
    ansible.builtin.shell: systemctl daemon-reload | systemctl start backend | systemctl enable backend

  

